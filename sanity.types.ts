/**
 * ---------------------------------------------------------------------------------
 * This file has been generated by Sanity TypeGen.
 * Command: `sanity typegen generate`
 *
 * Any modifications made directly to this file will be overwritten the next time
 * the TypeScript definitions are generated. Please make changes to the Sanity
 * schema definitions and/or GROQ queries if you need to update these types.
 *
 * For more information on how to use Sanity TypeGen, visit the official documentation:
 * https://www.sanity.io/docs/sanity-typegen
 * ---------------------------------------------------------------------------------
 */

// Source: schema.json
export type Socialproofsection = {
  _type: "socialproofsection";
  title?: Array<{
    _key: string;
  } & InternationalizedArrayStringValue>;
  description?: Array<{
    _key: string;
  } & InternationalizedArrayTextValue>;
  logos?: Array<{
    _ref: string;
    _type: "reference";
    _weak?: boolean;
    _key: string;
    [internalGroqTypeReferenceTo]?: "companylogo";
  }>;
};

export type SiteSettings = {
  _id: string;
  _type: "siteSettings";
  _createdAt: string;
  _updatedAt: string;
  _rev: string;
  siteName?: Array<{
    _key: string;
  } & InternationalizedArrayStringValue>;
  siteDescription?: Array<{
    _key: string;
  } & InternationalizedArrayTextValue>;
  header?: {
    _ref: string;
    _type: "reference";
    _weak?: boolean;
    [internalGroqTypeReferenceTo]?: "header";
  };
  footer?: {
    _ref: string;
    _type: "reference";
    _weak?: boolean;
    [internalGroqTypeReferenceTo]?: "footer";
  };
};

export type Quotesection = {
  _type: "quotesection";
  quote?: Array<{
    _key: string;
  } & InternationalizedArrayTextValue>;
  authorName?: Array<{
    _key: string;
  } & InternationalizedArrayStringValue>;
  authorTitle?: Array<{
    _key: string;
  } & InternationalizedArrayStringValue>;
  authorImage?: Array<{
    _key: string;
  } & InternationalizedArrayImageValue>;
};

export type Metricssection = {
  _type: "metricssection";
  title?: Array<{
    _key: string;
  } & InternationalizedArrayStringValue>;
  description?: Array<{
    _key: string;
  } & InternationalizedArrayTextValue>;
  metrics?: Array<{
    value?: Array<{
      _key: string;
    } & InternationalizedArrayStringValue>;
    label?: Array<{
      _key: string;
    } & InternationalizedArrayTextValue>;
    icon?: Array<{
      _key: string;
    } & InternationalizedArrayImageValue>;
    _type: "metricitem";
    _key: string;
  }>;
};

export type Metricitem = {
  _id: string;
  _type: "metricitem";
  _createdAt: string;
  _updatedAt: string;
  _rev: string;
  value?: Array<{
    _key: string;
  } & InternationalizedArrayStringValue>;
  label?: Array<{
    _key: string;
  } & InternationalizedArrayTextValue>;
  icon?: Array<{
    _key: string;
  } & InternationalizedArrayImageValue>;
};

export type Imagewithalt = {
  _type: "imagewithalt";
  image?: Array<{
    _key: string;
  } & InternationalizedArrayImageValue>;
  altText?: Array<{
    _key: string;
  } & InternationalizedArrayStringValue>;
  caption?: Array<{
    _key: string;
  } & InternationalizedArrayTextValue>;
};

export type Herosection = {
  _type: "herosection";
  headline?: Array<{
    _key: string;
  } & InternationalizedArrayStringValue>;
  tagline?: Array<{
    _key: string;
  } & InternationalizedArrayTextValue>;
  image?: Array<{
    _key: string;
  } & InternationalizedArrayImageValue>;
  ctaButtons?: Array<{
    _key: string;
  } & Button>;
};

export type Header = {
  _id: string;
  _type: "header";
  _createdAt: string;
  _updatedAt: string;
  _rev: string;
  logo?: {
    _ref: string;
    _type: "reference";
    _weak?: boolean;
    [internalGroqTypeReferenceTo]?: "companylogo";
  };
  mainNavigation?: Array<{
    _key: string;
  } & Link>;
  ctaButton?: Button;
};

export type Footerlinkscolumn = {
  _type: "footerlinkscolumn";
  title?: Array<{
    _key: string;
  } & InternationalizedArrayStringValue>;
  links?: Array<{
    _key: string;
  } & Link>;
};

export type Footerlink = {
  _type: "footerlink";
  label?: Array<{
    _key: string;
  } & InternationalizedArrayStringValue>;
  link?: Link;
};

export type Link = {
  _type: "link";
  label?: Array<{
    _key: string;
  } & InternationalizedArrayStringValue>;
  externalUrl?: Array<{
    _key: string;
  } & InternationalizedArrayUrlValue>;
  internalLink?: {
    _ref: string;
    _type: "reference";
    _weak?: boolean;
    [internalGroqTypeReferenceTo]?: "page";
  };
};

export type Footer = {
  _id: string;
  _type: "footer";
  _createdAt: string;
  _updatedAt: string;
  _rev: string;
  linkColumns?: Array<{
    _key: string;
  } & Footerlinkscolumn>;
  logo?: {
    _ref: string;
    _type: "reference";
    _weak?: boolean;
    [internalGroqTypeReferenceTo]?: "companylogo";
  };
  copyrightText?: Array<{
    _key: string;
  } & InternationalizedArrayTextValue>;
};

export type Featuressection = {
  _type: "featuressection";
  name?: string;
  title?: Array<{
    _key: string;
  } & InternationalizedArrayStringValue>;
  description?: Array<{
    _key: string;
  } & InternationalizedArrayTextValue>;
  features?: Array<{
    _ref: string;
    _type: "reference";
    _weak?: boolean;
    _key: string;
    [internalGroqTypeReferenceTo]?: "feature";
  }>;
};

export type Feature = {
  _id: string;
  _type: "feature";
  _createdAt: string;
  _updatedAt: string;
  _rev: string;
  title?: Array<{
    _key: string;
  } & InternationalizedArrayStringValue>;
  description?: Array<{
    _key: string;
  } & InternationalizedArrayTextValue>;
  icon?: Array<{
    _key: string;
  } & InternationalizedArrayImageValue>;
};

export type Ctasection = {
  _type: "ctasection";
  title?: Array<{
    _key: string;
  } & InternationalizedArrayStringValue>;
  description?: Array<{
    _key: string;
  } & InternationalizedArrayTextValue>;
  image?: Array<{
    _key: string;
  } & InternationalizedArrayImageValue>;
  button?: Button;
};

export type Companylogo = {
  _id: string;
  _type: "companylogo";
  _createdAt: string;
  _updatedAt: string;
  _rev: string;
  name?: Array<{
    _key: string;
  } & InternationalizedArrayStringValue>;
  logo?: Array<{
    _key: string;
  } & InternationalizedArrayImageValue>;
  altText?: Array<{
    _key: string;
  } & InternationalizedArrayStringValue>;
  url?: Array<{
    _key: string;
  } & InternationalizedArrayUrlValue>;
};

export type Button = {
  _type: "button";
  label?: Array<{
    _key: string;
  } & InternationalizedArrayStringValue>;
  link?: {
    internalLink?: {
      _ref: string;
      _type: "reference";
      _weak?: boolean;
      [internalGroqTypeReferenceTo]?: "page";
    };
    externalLink?: Array<{
      _key: string;
    } & InternationalizedArrayUrlValue>;
  };
};

export type Page = {
  _id: string;
  _type: "page";
  _createdAt: string;
  _updatedAt: string;
  _rev: string;
  title?: Array<{
    _key: string;
  } & InternationalizedArrayStringValue>;
  slug?: Array<{
    _key: string;
  } & InternationalizedArraySlugValue>;
  pageBuilder?: Array<{
    _key: string;
  } & Author | {
    _key: string;
  } & Button | {
    _key: string;
  } & Ctasection | {
    _key: string;
  } & Featuressection | {
    _key: string;
  } & Footerlink | {
    _key: string;
  } & Footerlinkscolumn | {
    _key: string;
  } & Herosection | {
    _key: string;
  } & Imagewithalt | {
    _key: string;
  } & Link | {
    _key: string;
  } & Metricssection | {
    _key: string;
  } & Quotesection | {
    _key: string;
  } & Seo | {
    _key: string;
  } & Socialproofsection>;
  seo?: Seo;
};

export type Seo = {
  _type: "seo";
  metaTitle?: Array<{
    _key: string;
  } & InternationalizedArrayStringValue>;
  metaDescription?: Array<{
    _key: string;
  } & InternationalizedArrayTextValue>;
  ogImage?: Array<{
    _key: string;
  } & InternationalizedArrayImageValue>;
  ogTitle?: Array<{
    _key: string;
  } & InternationalizedArrayStringValue>;
  ogDescription?: Array<{
    _key: string;
  } & InternationalizedArrayTextValue>;
  keywords?: Array<Array<{
    _key: string;
  } & InternationalizedArrayStringValue>>;
  noIndex?: boolean;
  canonicalUrl?: Array<{
    _key: string;
  } & InternationalizedArrayUrlValue>;
};

export type Author = {
  _type: "author";
  name?: Array<{
    _key: string;
  } & InternationalizedArrayStringValue>;
  slug?: Array<{
    _key: string;
  } & InternationalizedArraySlugValue>;
  image?: Array<{
    _key: string;
  } & InternationalizedArrayImageValue>;
  bio?: Array<{
    _key: string;
  } & InternationalizedArrayTextValue>;
};

export type InternationalizedArraySlugValue = {
  _type: "internationalizedArraySlugValue";
  value?: Slug;
};

export type InternationalizedArrayFileValue = {
  _type: "internationalizedArrayFileValue";
  value?: {
    asset?: {
      _ref: string;
      _type: "reference";
      _weak?: boolean;
      [internalGroqTypeReferenceTo]?: "sanity.fileAsset";
    };
    media?: unknown;
    _type: "file";
  };
};

export type InternationalizedArrayUrlValue = {
  _type: "internationalizedArrayUrlValue";
  value?: string;
};

export type InternationalizedArrayImageValue = {
  _type: "internationalizedArrayImageValue";
  value?: {
    asset?: {
      _ref: string;
      _type: "reference";
      _weak?: boolean;
      [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
    };
    media?: unknown;
    hotspot?: SanityImageHotspot;
    crop?: SanityImageCrop;
    _type: "image";
  };
};

export type InternationalizedArrayTextValue = {
  _type: "internationalizedArrayTextValue";
  value?: string;
};

export type InternationalizedArrayStringValue = {
  _type: "internationalizedArrayStringValue";
  value?: string;
};

export type InternationalizedArraySlug = Array<{
  _key: string;
} & InternationalizedArraySlugValue>;

export type InternationalizedArrayFile = Array<{
  _key: string;
} & InternationalizedArrayFileValue>;

export type InternationalizedArrayUrl = Array<{
  _key: string;
} & InternationalizedArrayUrlValue>;

export type InternationalizedArrayImage = Array<{
  _key: string;
} & InternationalizedArrayImageValue>;

export type InternationalizedArrayText = Array<{
  _key: string;
} & InternationalizedArrayTextValue>;

export type InternationalizedArrayString = Array<{
  _key: string;
} & InternationalizedArrayStringValue>;

export type SanityImagePaletteSwatch = {
  _type: "sanity.imagePaletteSwatch";
  background?: string;
  foreground?: string;
  population?: number;
  title?: string;
};

export type SanityImagePalette = {
  _type: "sanity.imagePalette";
  darkMuted?: SanityImagePaletteSwatch;
  lightVibrant?: SanityImagePaletteSwatch;
  darkVibrant?: SanityImagePaletteSwatch;
  vibrant?: SanityImagePaletteSwatch;
  dominant?: SanityImagePaletteSwatch;
  lightMuted?: SanityImagePaletteSwatch;
  muted?: SanityImagePaletteSwatch;
};

export type SanityImageDimensions = {
  _type: "sanity.imageDimensions";
  height?: number;
  width?: number;
  aspectRatio?: number;
};

export type SanityImageHotspot = {
  _type: "sanity.imageHotspot";
  x?: number;
  y?: number;
  height?: number;
  width?: number;
};

export type SanityImageCrop = {
  _type: "sanity.imageCrop";
  top?: number;
  bottom?: number;
  left?: number;
  right?: number;
};

export type SanityFileAsset = {
  _id: string;
  _type: "sanity.fileAsset";
  _createdAt: string;
  _updatedAt: string;
  _rev: string;
  originalFilename?: string;
  label?: string;
  title?: string;
  description?: string;
  altText?: string;
  sha1hash?: string;
  extension?: string;
  mimeType?: string;
  size?: number;
  assetId?: string;
  uploadId?: string;
  path?: string;
  url?: string;
  source?: SanityAssetSourceData;
};

export type SanityImageAsset = {
  _id: string;
  _type: "sanity.imageAsset";
  _createdAt: string;
  _updatedAt: string;
  _rev: string;
  originalFilename?: string;
  label?: string;
  title?: string;
  description?: string;
  altText?: string;
  sha1hash?: string;
  extension?: string;
  mimeType?: string;
  size?: number;
  assetId?: string;
  uploadId?: string;
  path?: string;
  url?: string;
  metadata?: SanityImageMetadata;
  source?: SanityAssetSourceData;
};

export type SanityImageMetadata = {
  _type: "sanity.imageMetadata";
  location?: Geopoint;
  dimensions?: SanityImageDimensions;
  palette?: SanityImagePalette;
  lqip?: string;
  blurHash?: string;
  hasAlpha?: boolean;
  isOpaque?: boolean;
};

export type Geopoint = {
  _type: "geopoint";
  lat?: number;
  lng?: number;
  alt?: number;
};

export type Slug = {
  _type: "slug";
  current?: string;
  source?: string;
};

export type SanityAssetSourceData = {
  _type: "sanity.assetSourceData";
  name?: string;
  id?: string;
  url?: string;
};

export type AllSanitySchemaTypes = Socialproofsection | SiteSettings | Quotesection | Metricssection | Metricitem | Imagewithalt | Herosection | Header | Footerlinkscolumn | Footerlink | Link | Footer | Featuressection | Feature | Ctasection | Companylogo | Button | Page | Seo | Author | InternationalizedArraySlugValue | InternationalizedArrayFileValue | InternationalizedArrayUrlValue | InternationalizedArrayImageValue | InternationalizedArrayTextValue | InternationalizedArrayStringValue | InternationalizedArraySlug | InternationalizedArrayFile | InternationalizedArrayUrl | InternationalizedArrayImage | InternationalizedArrayText | InternationalizedArrayString | SanityImagePaletteSwatch | SanityImagePalette | SanityImageDimensions | SanityImageHotspot | SanityImageCrop | SanityFileAsset | SanityImageAsset | SanityImageMetadata | Geopoint | Slug | SanityAssetSourceData;
export declare const internalGroqTypeReferenceTo: unique symbol;
